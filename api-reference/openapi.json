{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://munki-webapp.onrender.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/top-holders": {
      "get": {
        "description": "Returns the top x holders and their top holdings",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "Token address to analyze",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of holders to include (default 50, max 50)",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "Your public API key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
  "description": "Top holders and token metadata",
  "content": {
    "application/json": {
      "schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "token_info": {
                "type": "object",
                "properties": {
                  "price": { "type": "number" },
                  "symbol": { "type": "string" },
                  "name": { "type": "string" },
                  "logoURI": { "type": "string", "format": "uri" },
                  "liquidity": { "type": "number" },
                  "market_cap": { "type": "number" },
                  "supply": { "type": "number" },
                  "circulatingSupply": { "type": "number" },
                  "fdv": { "type": "number" },
                  "holder": { "type": "integer" },
                  "extensions": {
                    "type": "object",
                    "properties": {
                      "twitter": { "type": "string", "format": "uri" },
                      "description": { "type": "string" }
                    }
                  },
                  "priceChange1hPercent": { "type": "number" },
                  "creationTime": { "type": "integer" }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "count": { "type": "integer" },
                    "wallet": { "type": "string" },
                    "amount": { "type": "number" },
                    "share_in_percent": { "type": "number" },
                    "net_worth": { "type": "number" },
                    "net_worth_excluding": { "type": "number" },
                    "first_top_holding": { "$ref": "#/components/schemas/Holding" },
                    "second_top_holding": { "$ref": "#/components/schemas/Holding" },
                    "third_top_holding": { "$ref": "#/components/schemas/Holding" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
,
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}